'declare variables
dir = Program.Directory
appver = "1.0"
appnom = "The Block Game"
apptit = Text.Append(appnom + " ",appver)
cpos = ""
map = ""
lbut = ""
worldp = dir + "\world.wld"
world = ""
gui = ""
cgui = 0
ingame = "False"
blocktypes = ""
gwlkey = ""
saveworld = "False"
playerrenderdata = ""
renderreg = ""
'renderobjreg = ""
imglstreg = ""
'this array has the next render data "x,y" per item
nextrenderarr = ""
'stores if keys are pressed or released
keydata = ""
lpos = ""
'layer gen array
layergen = ""
layergenerator = ""
toend = "False"
pausenow = "False"
skipnow = "False"

'program
init()
runtime()

Program.End()
'screen is 53 by 30 blocks
Sub init
  'window init
  GraphicsWindow.Show()
  GraphicsWindow.Title = apptit
  GraphicsWindow.CanResize = "False"
  GraphicsWindow.Width = 850
  GraphicsWindow.Height = 480
  GraphicsWindow.BackgroundColor = "Gray"
  'init font
  GraphicsWindow.FontName = "Consolas"
  GraphicsWindow.FontSize = 72
  GraphicsWindow.FontBold = "True"
  'define splash text
  GraphicsWindow.PenColor = "Red"
  GraphicsWindow.BrushColor = "Red"
  sptxt = Shapes.AddText("Captain ALM")
  Shapes.Move(sptxt,850/5,480/3)
  Program.Delay(500)
  initgr()
  Program.Delay(500)
  initrunner()
  Shapes.HideShape(sptxt)
EndSub

Sub initgr
  'placement property: 0 = background 1 = inline
  blocktypes["air"]["placement"] = 0
  'image property: the value is the image location or img:(colour) for a coloured block
  blocktypes["air"]["image"] = "img:#ffffff"
  'gravity property: 0 = no gravity 1 = gravity
  blocktypes["air"]["gravity"] = 1
  
  'register test blocks
  blocktypes["block"]["placement"] = 1
  blocktypes["block"]["image"] = "img:#000000"
  blocktypes["win"]["placement"] = 0
  blocktypes["win"]["image"] = "img:#1000ff"
  blocktypes["win"]["gravity"] = 0
  texec = ""
  texec[1]["name"] = "output"
  texec[1]["args"][1] = "Completed Level"
  texec[2]["name"] = "generate"
  texec[3]["name"] = "position"
  texec[3]["args"][1] = 1
  texec[3]["args"][2] = 1
  blocktypes["win"]["action"]["enter"] = texec
  blocktypes["die"]["placement"] = 0
  blocktypes["die"]["image"] = "img:#ff0000"
  blocktypes["die"]["gravity"] = 0
  texec = ""
  texec[1]["name"] = "output"
  texec[1]["args"][1] = "Failed Level"
  texec[2]["name"] = "position"
  texec[2]["args"][1] = 1
  texec[2]["args"][2] = 1
  blocktypes["die"]["action"]["enter"] = texec
  
  'register player renderer: the value is the image location or img:(colour) for a coloured block
  playerrenderdata = "img:#18C4D1"
  
  'load all image data
  If Text.StartsWith(playerrenderdata,"img:") <> "True" Then
    imglstreg[playerrenderdata] = ImageList.LoadImage(playerrenderdata)
  EndIf
  bttmp = Array.GetAllIndices(blocktypes)
  For i_img_ll = 1 To Array.GetItemCount(blocktypes)
    If Text.StartsWith(blocktypes[bttmp[i_img_ll]]["image"],"img:") <> "True" Then
      blocktypes[bttmp[i_img_ll]]["image"] = ImageList.LoadImage(blocktypes[bttmp[i_img_ll]]["image"])
    EndIf
  EndFor
  
  'register internal layer generators
  'Internal Layers:
  'Air layer is 1-15
  'Blocked layer is 16-25
  'Death layer is 26-30
  cgenlayert["name"] = "air_gen"
  cgenlayert["block"] = "air"
  cgenlayert["start"] = 1
  cgenlayert["end"] = 15
  cgenlayert["weight"] = 0
  cgenlayert["order"] = 0 
  cgenlayert["altblock"] = "air"
  layergen[1] = cgenlayert
  cgenlayert["name"] = "block_gen"
  cgenlayert["block"] = "block"
  cgenlayert["start"] = 16
  cgenlayert["end"] = 25
  cgenlayert["weight"] = 2
  cgenlayert["order"] = 0 
  cgenlayert["altblock"] = "air"
  layergen[2] = cgenlayert
  cgenlayert["name"] = "lava_gen"
  cgenlayert["block"] = "die"
  cgenlayert["start"] = 26
  cgenlayert["end"] = 30
  cgenlayert["weight"] = 0
  cgenlayert["order"] = 0
  cgenlayert["altblock"] = "air"
  layergen[3] = cgenlayert
  cgenlayert["name"] = "death_gen"
  cgenlayert["block"] = "die"
  cgenlayert["start"] = 17
  cgenlayert["end"] = 22
  cgenlayert["weight"] = 6
  cgenlayert["order"] = 1
  cgenlayert["altblock"] = ""
  layergen[4] = cgenlayert
  cgenlayert["name"] = "win_gen"
  cgenlayert["block"] = "win"
  cgenlayert["start"] = 18
  cgenlayert["end"] = 18
  cgenlayert["weight"] = 8
  cgenlayert["order"] = 2
  cgenlayert["altblock"] = ""
  layergen[5] = cgenlayert
EndSub

Sub initrunner
  GraphicsWindow.FontSize = 48
  GraphicsWindow.PenColor = "Red"
  GraphicsWindow.BrushColor = "Red"
  gui[1][1] = Shapes.AddText("The Block Game")
  Shapes.Move(gui[1][1],50,20)
  GraphicsWindow.FontSize = 24
  GraphicsWindow.PenColor = "Black"
  GraphicsWindow.BrushColor = "Black"
  gui[1][2] = Controls.AddButton("Play Game",50,135)
  gui[1][3] = Controls.AddButton("Reset Game",50,235)
  gui[1][4] = Controls.AddButton("About Game",50,335)
  gui[1][5] = Controls.AddButton("Quit Game",50,435)
  cgui = 1
  hidegui()
  cgui = 0
  
  initgame()
  cgui = 2
  hidegui()
  cgui = 0
  
  GraphicsWindow.PenColor = "Black"
  GraphicsWindow.BrushColor = "Gray"
  gui[3][1] = Shapes.AddRectangle(GraphicsWindow.Width,GraphicsWindow.Height)
  Shapes.Move(gui[3][1],0,0)
  Shapes.SetOpacity(gui[3][1],75)
  GraphicsWindow.BrushColor = "Black"
  GraphicsWindow.FontSize = 24
  gui[3][2] = Shapes.AddText("Game Paused")
  Shapes.Move(gui[3][2],850/5,40)
  gui[3][3] = Controls.AddButton("Return to Menu",850/5,185)
  gui[3][4] = Controls.AddButton("Save and Return to Menu",850/5,265)
  gui[3][5] = Controls.AddButton("Close Game",850/5,425)
  gui[3][6] = Controls.AddButton("Return to Game",850/5,105)
  gui[3][7] = Controls.AddButton("Save and Close",850/5,345)
  cgui = 3
  hidegui()
  cgui = 0
  
  Controls.ButtonClicked = onbut
  GraphicsWindow.KeyDown = onkeydown
  GraphicsWindow.KeyUp = onkeyup
EndSub

Sub runtime
  cgui = 1
  showgui()
  
  While "True"
    If butd Then
      If lbut = gui[1][2] then
        lbut = ""
        ingame = "True"
        hidegui()
      ElseIf lbut = gui[1][3] then
        lbut = ""
        chkdel = File.DeleteFile(worldp)
        Sound.PlayChime()
        If chkdel = "SUCCESS" then
          GraphicsWindow.ShowMessage("Deleted World!", apptit)
          keydata = ""
        Else
          GraphicsWindow.ShowMessage("Delete World Failed!", apptit)
          keydata = ""
        endif
      ElseIf lbut = gui[1][4] then
        lbut = ""
        Sound.PlayChime()
        GraphicsWindow.ShowMessage("About The Block Game - By Captain ALM", apptit)
        keydata = ""
      ElseIf lbut = gui[1][5] then
        lbut = ""
        Program.End()
      EndIf
      butd = "False"
    EndIf
    If ingame Then
      cgui = 2
      Shapes.SetText(sptxt,"Loading Game...")
      Shapes.ShowShape(sptxt)
      world = File.ReadContents(worldp)
      cpos = ""
      map = ""
      keydata = ""
      If world = "" then
        cpos["x"] = 1
        cpos["y"] = 1
        lpos = cpos
        world["pos"] = cpos
        generate()
        world["map"] = map
      Else
        cpos = world["pos"]
        map = world["map"]
      EndIf
      Shapes.HideShape(sptxt)
      showgui()
      renderall()
      While ingame
        gametick()
        Program.Delay(80)
      EndWhile
      pausenow = "False"
      skipnow = "False"
      If saveworld then
        saveworld = "False"
        Shapes.SetText(sptxt,"Saving Game...")
        Shapes.ShowShape(sptxt)
        world["pos"] = cpos
        world["map"] = map
        File.WriteContents(worldp,world)
        Shapes.HideShape(sptxt)
      EndIf
      If toend then
        Program.End()
      EndIf
      keydata = ""
      world = ""
      cpos = ""
      map = ""
      hidegui()
      cgui = 1
      showgui()
    EndIf
    Program.Delay(40)
  EndWhile
EndSub

Sub initgame
  
EndSub

Sub generate
  'Layer Generator Array: name,(generator name) block,(block name) start,(start layer (1-30)) end,(end layer) weight,(randomiser, set to 0 to make the whole layer the block) order,(order of generation) altblock,(block used when weight does not generate the block)
  'order using generator order values
  layergenerator = ""
  clayer = ""
  clayertmp = ""
  For i_gen_l_i = 1 To Array.GetItemCount(layergen)
    clayer = layergen[i_gen_l_i]
    clayertmp = layergenerator[clayer["order"]]
    If clayertmp = "" Then
      clayertmp[1] = clayer
    Else
      clayertmp[Array.GetItemCount(clayertmp) + 1] = clayer
    EndIf
    layergenerator[clayer["order"]] = clayertmp
  EndFor
  'generate layers
  layergenerator_indx = Array.GetAllIndices(layergenerator)
  clayer = ""
  clayertmp = ""
  clayerorderset = ""
  For i_gen_l_i = 1 To Array.GetItemCount(layergenerator_indx)
    clayerorderset = layergenerator[layergenerator_indx[i_gen_l_i]]
    For i_gen_l_j = 1 To Array.GetItemCount(clayerorderset)
      clayer = clayerorderset[i_gen_l_j]
      For i_gen = clayer["start"] To clayer["end"]
        If i_gen > 30 Then
          Goto endgenloop
        Else
          For i_gen_i = 1 To 53 Step 1
            If clayer["weight"] < 1 then
              If blocktypes[clayer["block"]] <> "" Then
                map[i_gen_i][i_gen] = clayer["block"]
              Else
                map[i_gen_i][i_gen] = "air"
              EndIf
            Else
              If Math.GetRandomNumber(clayer["weight"]) = Math.Round(clayer["weight"] / 2) then
                If blocktypes[clayer["block"]] <> "" Then
                  map[i_gen_i][i_gen] = clayer["block"] 
                Else
                  map[i_gen_i][i_gen] = "air"
                Endif
              Else
                If blocktypes[clayer["altblock"]] <> "" then
                  map[i_gen_i][i_gen] = clayer["altblock"]
                Else
                  If map[i_gen_i][i_gen] = "" then
                    map[i_gen_i][i_gen] = "air"
                  EndIf 
                Endif
              Endif
            EndIf
          EndFor
        EndIf
      EndFor
      endgenloop:
    EndFor
  EndFor
EndSub

Sub render
  If nextrenderarr <> "" Then
    For i_odren = 1 To Array.GetItemCount(nextrenderarr)
      i_render_x = Text.GetSubText(nextrenderarr[i_odren],1,Text.GetIndexOf(nextrenderarr[i_odren],",") - 1)
      i_render_y = Text.GetSubTextToEnd(nextrenderarr[i_odren],Text.GetIndexOf(nextrenderarr[i_odren],",") + 1)
      If i_render_x = cpos["x"] And i_render_y = cpos["y"] Then
        renderreg[i_render_x][i_render_y] = playerrenderdata
      Else
        renderreg[i_render_x][i_render_y] = blocktypes[map[i_render_x][i_render_y]]["image"]
      Endif
      If Text.StartsWith(renderreg[i_render_x][i_render_y],"img:") Then
        obc = GraphicsWindow.BrushColor
        opc = GraphicsWindow.PenColor
        GraphicsWindow.BrushColor = Text.GetSubTextToEnd(renderreg[i_render_x][i_render_y],5)
        GraphicsWindow.PenColor = Text.GetSubTextToEnd(renderreg[i_render_x][i_render_y],5)
        GraphicsWindow.FillRectangle((i_render_x-1)*16,(i_render_y-1)*16,16,16)
        GraphicsWindow.BrushColor = obc
        GraphicsWindow.PenColor = opc
      Else
        GraphicsWindow.DrawResizedImage(imglstreg[renderreg[i_render_x][i_render_y]],(i_render_x-1)*16,(i_render_y-1)*16,16,16)
      EndIf
    EndFor
  EndIf
EndSub

Sub unrender
  If nextrenderarr <> "" Then
    For i_odren = 1 To Array.GetItemCount(nextrenderarr)
      i_render_x = Text.GetSubText(nextrenderarr[i_odren],1,Text.GetIndexOf(nextrenderarr[i_odren],",") - 1)
      i_render_y = Text.GetSubTextToEnd(nextrenderarr[i_odren],Text.GetIndexOf(nextrenderarr[i_odren],",") + 1)
      obc = GraphicsWindow.BrushColor
      opc = GraphicsWindow.PenColor
      GraphicsWindow.BrushColor = GraphicsWindow.BackgroundColor
      GraphicsWindow.PenColor = GraphicsWindow.BackgroundColor
      GraphicsWindow.FillRectangle((i_render_x-1)*16,(i_render_y-1)*16,16,16)
      GraphicsWindow.BrushColor = obc
      GraphicsWindow.PenColor = opc
    EndFor
  EndIf
EndSub

Sub renderall
  For i_render_x = 1 To 53 Step 1
    For i_render_y = 1 to 53 step 1
      If i_render_x = cpos["x"] And i_render_y = cpos["y"] Then
        renderreg[i_render_x][i_render_y] = playerrenderdata
      Else
        renderreg[i_render_x][i_render_y] = blocktypes[map[i_render_x][i_render_y]]["image"]
      Endif
      If Text.StartsWith(renderreg[i_render_x][i_render_y],"img:") Then
        obc = GraphicsWindow.BrushColor
        opc = GraphicsWindow.PenColor
        GraphicsWindow.BrushColor = Text.GetSubTextToEnd(renderreg[i_render_x][i_render_y],5)
        GraphicsWindow.PenColor = Text.GetSubTextToEnd(renderreg[i_render_x][i_render_y],5)
        GraphicsWindow.FillRectangle((i_render_x-1)*16,(i_render_y-1)*16,16,16)
        GraphicsWindow.BrushColor = obc
        GraphicsWindow.PenColor = opc
      Else
        GraphicsWindow.DrawResizedImage(imglstreg[renderreg[i_render_x][i_render_y]],(i_render_x-1)*16,(i_render_y-1)*16,16,16)
      EndIf
    EndFor
  EndFor
EndSub

Sub unrenderall
  obc = GraphicsWindow.BrushColor
  opc = GraphicsWindow.PenColor
  GraphicsWindow.BrushColor = GraphicsWindow.BackgroundColor
  GraphicsWindow.PenColor = GraphicsWindow.BackgroundColor
  GraphicsWindow.FillRectangle(0,0,GraphicsWindow.Width,GraphicsWindow.Height)
  GraphicsWindow.BrushColor = obc
  GraphicsWindow.PenColor = opc
  renderreg = ""
EndSub

Sub gametick
  act()
  If pausenow Or skipnow Then
    skipnow = "False"
    Goto pgsa
  EndIf 
  'if player can fall due to gravity
  If blocktypes[map[cpos["x"]][cpos["y"]]]["gravity"] = 1 And blocktypes[map[cpos["x"]][cpos["y"]]]["placement"] <> 1 And cpos["y"] < 30 and blocktypes[map[cpos["x"]][cpos["y"]+1]]["placement"] <> 1 Then
    'rerender bits needed when player falls due to gravity #1
    nextrenderarr = ""
    nextrenderarr[1] = cpos["x"] + "," + cpos["y"]
    'make player fall
    cpos["y"] = cpos["y"] + 1
    'rerender bits needed when player falls due to gravity #2
    nextrenderarr[2] = cpos["x"] + "," + cpos["y"]
    render()
    nextrenderarr = ""
  EndIf
  checkentlev()
  act()
  lpos = cpos
  If keydata["Up"] Or keydata["W"] Or keydata["Space"] Then
    If (blocktypes[map[cpos["x"]][cpos["y"] + 1]]["placement"] = 1 Or cpos["y"] = 30 Or blocktypes[map[cpos["x"]][cpos["y"]]]["gravity"] = 0) And blocktypes[map[cpos["x"]][cpos["y"] - 1]]["placement"] <> 1 And cpos["y"] <> 1 Then
      'rerender bits needed when up key pressed
      nextrenderarr = ""
      nextrenderarr[1] = cpos["x"] + "," + cpos["y"]
      'make the player jump #1
      cpos["y"] = cpos["y"] - 1
      If blocktypes[map[cpos["x"]][cpos["y"] - 1]]["placement"] <> 1 And cpos["y"] <> 2 And blocktypes[map[cpos["x"]][cpos["y"]]]["gravity"] <> 0 Then
        'make the player jump #2
        cpos["y"] = cpos["y"] - 1
      EndIf
      nextrenderarr[2] = cpos["x"] + "," + cpos["y"]
      render()
      nextrenderarr = ""
    EndIf
  EndIf
  checkentlev()
  act()
  lpos = cpos
  If keydata["Left"] Or keydata["A"] Then
    If blocktypes[map[cpos["x"] - 1][cpos["y"]]]["placement"] <> 1 And cpos["x"] <> 1 then
      'make the player move left
      nextrenderarr = ""
      nextrenderarr[1] = cpos["x"] + "," + cpos["y"]
      cpos["x"] = cpos["x"] - 1
      nextrenderarr[2] = cpos["x"] + "," + cpos["y"]
      render()
      nextrenderarr = ""
    EndIf
  EndIf
  checkentlev()
  act()
  lpos = cpos
  If keydata["Right"] Or keydata["D"] Then
    If blocktypes[map[cpos["x"] + 1][cpos["y"]]]["placement"] <> 1 And cpos["x"] <> 53 then
      'make the player move right
      nextrenderarr = ""
      nextrenderarr[1] = cpos["x"] + "," + cpos["y"]
      cpos["x"] = cpos["x"] + 1
      nextrenderarr[2] = cpos["x"] + "," + cpos["y"]
      render()
      nextrenderarr = ""
    EndIf
  EndIf
  checkentlev()
  act()
  lpos = cpos
  If keydata["Down"] Or keydata["S"] Then
    If blocktypes[map[cpos["x"]][cpos["y"] + 1]]["placement"] <> 1 and cpos["y"] <> 30 Then
      'rerender bits needed when down key pressed
      nextrenderarr = ""
      nextrenderarr[1] = cpos["x"] + "," + cpos["y"]
      'make the player drop #1
      cpos["y"] = cpos["y"] + 1
      nextrenderarr[2] = cpos["x"] + "," + cpos["y"]
      render()
      nextrenderarr = ""
    EndIf
  EndIf
  checkentlev()
  act()
  lpos = cpos
  pgsa:
  If gwlkey = "Escape" Or pausenow Then
    pausenow = "False"
    unrenderall()
    gwlkey = ""
    hidegui()
    cgui = 3
    showgui()
    While cgui = 3
      If lbut = gui[3][3] Then
        lbut = ""
        hidegui()
        cgui = 1
        ingame = "False"
      ElseIf lbut = gui[3][4] then
        lbut = ""
        hidegui()
        cgui = 1
        ingame = "False"
        saveworld = "True"
      ElseIf lbut = gui[3][7] then
        lbut = ""
        hidegui()
        cgui = 1
        ingame = "False"
        saveworld = "True"
        toend = "True"
      ElseIf lbut = gui[3][5] then
        lbut = ""
        hidegui()
        cgui = 1
        ingame = "False"
        toend = "True"
      ElseIf lbut = gui[3][6] then
        lbut = ""
        hidegui()
        cgui = 2
        showgui()
        renderall()
      elseIf gwlkey = "Escape" Then
        gwlkey = ""
        hidegui()
        cgui = 2
        showgui()
        renderall()
      EndIf
      Program.Delay(40)
    EndWhile
  EndIf
  act()
EndSub

Sub checkentlev
  If lpos <> cpos Then
    'call block leave and enter actions
    If blocktypes[map[lpos["x"]][lpos["y"]]]["action"]["leave"] <> "" Then
      Stack.PushValue("actions_i",blocktypes[map[lpos["x"]][lpos["y"]]]["action"]["leave"])
    EndIf
    If blocktypes[map[cpos["x"]][cpos["y"]]]["action"]["enter"] <> "" Then
      Stack.PushValue("actions_i",blocktypes[map[cpos["x"]][cpos["y"]]]["action"]["enter"])
    EndIf
  EndIf
EndSub

Sub hidegui
  For i = 1 To Array.GetItemCount(gui[cgui])
    Shapes.HideShape(gui[cgui][i])
  EndFor
EndSub

Sub showgui
  For i = 1 To Array.GetItemCount(gui[cgui])
    Shapes.ShowShape(gui[cgui][i])
  EndFor
EndSub

Sub onbut
  butd = "True"
  lbut = Controls.LastClickedButton
EndSub

Sub onkeydown
  gwlkey = GraphicsWindow.LastKey
  kdlk = GraphicsWindow.LastKey
  keydata[kdlk] = "True"
EndSub

Sub onkeyup
  kulk = GraphicsWindow.LastKey
  keydata[kulk] = "False"
EndSub

Sub act
  cactions = ""
  'actions index first (number from 1), then, name,(name of action), args,(numbered array of arguments from 1)
  
  'reverse reverse stack into a queue
  While Stack.GetCount("actions_i") > 0
    Stack.PushValue("actions", Stack.PopValue("actions_i"))
  EndWhile
  
  'execute actions
  While Stack.GetCount("actions") > 0
    cactions = Stack.PopValue("actions")
    For act_i = 1 To Array.GetItemCount(cactions)
      cactnom = ""
      cactargs = ""
      cactnom = text.ConvertToLowerCase(cactions[act_i]["name"])
      cactargs = cactions[act_i]["args"]
      If cactnom = "position" Then
        nextrenderarr = ""
        If cactargs[1] <> "" and cactargs[2] <> "" and cactargs[1] > 0 and cactargs[1] < 54 and cactargs[2] > 0 and cactargs[2] < 31 then
          nextrenderarr[1] = cpos["x"] + "," + cpos["y"] 
          cpos["x"] = cactargs[1]
          cpos["y"] = cactargs[2]
          nextrenderarr[2] = cpos["x"] + "," + cpos["y"] 
          lpos = cpos
          render()
        EndIf
        nextrenderarr = ""
      ElseIf cactnom = "output" then
        GraphicsWindow.ShowMessage(cactargs[1],apptit)
        keydata = ""
      elseif cactnom = "generate" then
        unrenderall()
        Shapes.SetText(sptxt,"Regenerating...")
        Shapes.ShowShape(sptxt)
        world["pos"] = cpos
        generate()
        world["map"] = map
        Shapes.HideShape(sptxt)
        renderall()
      Elseif cactnom = "save" then
        unrenderall()
        Shapes.SetText(sptxt,"Saving Game...")
        Shapes.ShowShape(sptxt)
        world["pos"] = cpos
        world["map"] = map
        File.WriteContents(worldp,world)
        Shapes.HideShape(sptxt)
        renderall()
      elseif cactnom = "pause" then
        pausenow = "False"
      elseif cactnom = "exit" then
        Program.End()
      elseif cactnom = "menu" then
        unrenderall()
        hidegui()
        cgui = 1
        ingame = "False"
        skipnow = "True"
      elseif cactnom = "setblock" or cactnom = "set_block" or cactnom = "set block" then
        If blocktypes[cactargs[1]] <> "" then
          map[cpos["x"]][cpos["y"]] = cactargs[1]
        EndIf
      elseif cactnom = "setblockat" or cactnom = "set_block_at" or cactnom = "set block at" then
        If blocktypes[cactargs[1]] <> "" and cactargs[2] <> "" and cactargs[3] <> "" then
          map[cactargs[2]][cactargs[3]] = cactargs[1]
        EndIf
      elseif cactnom = "left" then
        nextrenderarr = ""
        If cactargs[1] = "" then
          cactargs[1] = 1
        EndIf
        nextrenderarr[1] = cpos["x"] + "," + cpos["y"]
        If cpos["x"] - cactargs[1] < 1 then
          cpos["x"] = 1
        elseif cpos["x"] - cactargs[1] > 53 then
          cpos["x"] = 53
        Else
          cpos["x"] = cpos["x"] - cactargs[1]
        Endif
        nextrenderarr[2] = cpos["x"] + "," + cpos["y"]
        render()
        nextrenderarr = ""
      elseif cactnom = "right" then
        nextrenderarr = ""
        If cactargs[1] = "" then
          cactargs[1] = 1
        EndIf
        nextrenderarr[1] = cpos["x"] + "," + cpos["y"]
        If cpos["x"] + cactargs[1] < 1 then
          cpos["x"] = 1
        elseif cpos["x"] + cactargs[1] > 53 then
          cpos["x"] = 53
        Else
          cpos["x"] = cpos["x"] + cactargs[1]
        Endif
        nextrenderarr[2] = cpos["x"] + "," + cpos["y"]
        render()
        nextrenderarr = ""
      elseif cactnom = "up" then
        nextrenderarr = ""
        If cactargs[1] = "" then
          cactargs[1] = 1
        EndIf
        nextrenderarr[1] = cpos["x"] + "," + cpos["y"]
        If cpos["y"] - cactargs[1] < 1 then
          cpos["y"] = 1
        elseif cpos["y"] - cactargs[1] > 30 then
          cpos["y"] = 30
        Else
          cpos["y"] = cpos["y"] - cactargs[1]
        Endif
        nextrenderarr[2] = cpos["x"] + "," + cpos["y"]
        render()
        nextrenderarr = ""
      elseif cactnom = "down" then
        nextrenderarr = ""
        If cactargs[1] = "" then
          cactargs[1] = 1
        EndIf
        nextrenderarr[1] = cpos["x"] + "," + cpos["y"]
        If cpos["y"] + cactargs[1] < 1 then
          cpos["y"] = 1
        elseif cpos["y"] + cactargs[1] > 30 then
          cpos["y"] = 30
        Else
          cpos["y"] = cpos["y"] + cactargs[1]
        Endif
        nextrenderarr[2] = cpos["x"] + "," + cpos["y"]
        render()
        nextrenderarr = ""
      Endif
    EndFor
  EndWhile
EndSub