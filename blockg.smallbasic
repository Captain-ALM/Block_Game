'declare variables
dir = Program.Directory
appver = "1.0"
appnom = "The Block Game"
apptit = Text.Append(appnom + " ",appver)
cpos = ""
map = ""
lbut = ""
worldp = dir + "\world.wld"
world = ""
gui = ""
cgui = 0
ingame = "False"
blocktypes = ""
gwlkey = ""
saveworld = "False"
playerrenderdata = ""
renderreg = ""
imglstreg = ""
'this array has the next render data "x,y" per item
nextrenderarr = ""
'stores if keys are pressed or released
keydata =""
lpos = ""
'layer gen array
layergen = ""
layergenerator = ""
toend = "False"
pausenow ="False"
skipnow = "False"
heldblock = ""
heldblockobj = ""
heldbackobj = ""
heldshown = ""
heldpos = ""
heldlm = 0
'Edit block at Pos "x,y"
editblockpos = ""
newblock = ""
'"x,y"
mineblockpos = ""
'"x,y"
placeblockpos = ""
useheld = ""
autosave = "False"
Not = "True=False;False=True;"


'program
init()
runtime()

Program.End()
'screen is 53 by 30 blocks
Sub init
  'window init
  GraphicsWindow.Show()
  GraphicsWindow.Title = apptit
  GraphicsWindow.CanResize = "False"
  GraphicsWindow.Width = 850
  GraphicsWindow.Height = 480
  GraphicsWindow.BackgroundColor = "Gray"
  'init font
  GraphicsWindow.FontName = "Consolas"
  GraphicsWindow.FontSize = 72
  GraphicsWindow.FontBold = "True"
  'define splash text
  GraphicsWindow.PenColor = "Red"
  GraphicsWindow.BrushColor = "Red"
  sptxt = Shapes.AddText("Captain ALM")
  Shapes.Move(sptxt,850/5,480/3)
  Program.Delay(500)
  initgr()
  Program.Delay(500)
  initrunner()
  Shapes.HideShape(sptxt)
EndSub

Sub initgr
  'placement property: 0 = background 1 = inline 2 = foreground
  blocktypes["air"]["placement"] = 0
  'image property: the value is the image location or img:(colour) for a coloured block
  blocktypes["air"]["image"] = "img:#ffffff"
  'gravity property: 0 = no gravity 1 = gravity
  blocktypes["air"]["gravity"] = 1
  
  'register internal layer generator
  cgenlayer["name"] = "air_gen"
  cgenlayer["block"] = "air"
  cgenlayer["start"] = 1
  cgenlayer["end"] = 30
  cgenlayer["weight"] = 0
  cgenlayer["order"] = 0
  cgenlayer["altblock"] = "air"
  layergen[1] = cgenlayer
  cgenlayer = ""
  
  playerrenderdata = ""
  initgame()
  
  'register player renderer: the value is the image location or img:(colour) for a coloured block
  If playerrenderdata = "" Then
    playerrenderdata = "img:#18C4D1"
  EndIf
  
  'load all image data
  If Text.StartsWith(playerrenderdata,"img:") <> "True" Then
    If Text.StartsWith(playerrenderdata,"\") And Text.StartsWith(playerrenderdata,"\\") <> "True" Then
      playerrenderdata = dir + playerrenderdata
    EndIf
    imglstreg[playerrenderdata] = ImageList.LoadImage(playerrenderdata)
  EndIf
  bttmp = Array.GetAllIndices(blocktypes)
  For i_img_ll = 1 To Array.GetItemCount(blocktypes)
    If Text.StartsWith(blocktypes[bttmp[i_img_ll]]["image"],"img:") <> "True" Then
      'blocktypes[bttmp[i_img_ll]]["image"] = ImageList.LoadImage(blocktypes[bttmp[i_img_ll]]["image"])
      If Text.StartsWith(blocktypes[bttmp[i_img_ll]]["image"],"\") And Text.StartsWith(blocktypes[bttmp[i_img_ll]]["image"],"\\") <> "True" Then
        blocktypes[bttmp[i_img_ll]]["image"] = dir + blocktypes[bttmp[i_img_ll]]["image"]
      EndIf
      blocktypes[bttmp[i_img_ll]]["image"] = ImageList.LoadImage(blocktypes[bttmp[i_img_ll]]["image"])
    EndIf
  EndFor
EndSub

Sub initrunner
  GraphicsWindow.FontSize = 48
  GraphicsWindow.PenColor = "Red"
  GraphicsWindow.BrushColor = "Red"
  gui[1][1] = Shapes.AddText("The Block Game")
  Shapes.Move(gui[1][1],50,20)
  GraphicsWindow.FontSize = 24
  GraphicsWindow.PenColor = "Black"
  GraphicsWindow.BrushColor = "Black"
  gui[1][2] = Controls.AddButton("Play Game",50,135)
  gui[1][3] = Controls.AddButton("Reset Game",50,235)
  gui[1][4] = Controls.AddButton("About Game",50,335)
  gui[1][5] = Controls.AddButton("Quit Game",50,435)
  cgui = 1
  hidegui()
  cgui = 0
  
  'initgame()
  GraphicsWindow.PenColor = "Silver"
  GraphicsWindow.BrushColor = "Silver"
  gui[2][1] = Shapes.AddRectangle(128,128)
  Shapes.Move(gui[2][1], (850/2) - 64, GraphicsWindow.Height - (128+64))
  Shapes.SetOpacity(gui[2][1],50)
  heldbackobj = gui[2][1]
  gui[2][2] = ""
  heldblockobj = gui[2][2]
  heldblock = ""
  heldpos = "True"
  heldshown = "True"
  cgui = 2
  hidegui()
  cgui = 0
  
  GraphicsWindow.PenColor = "Black"
  GraphicsWindow.BrushColor = "Gray"
  gui[3][1] = Shapes.AddRectangle(GraphicsWindow.Width,GraphicsWindow.Height)
  Shapes.Move(gui[3][1],0,0)
  Shapes.SetOpacity(gui[3][1],75)
  GraphicsWindow.BrushColor = "Black"
  GraphicsWindow.FontSize = 24
  gui[3][2] = Shapes.AddText("Game Paused")
  Shapes.Move(gui[3][2],850/2,40)
  gui[3][3] = Controls.AddButton("Return to Menu",850/8,185)
  gui[3][4] = Controls.AddButton("Save and Return to Menu",850/8,265)
  gui[3][5] = Controls.AddButton("Close Game",850/8,425)
  gui[3][6] = Controls.AddButton("Return to Game",850/8,105)
  gui[3][7] = Controls.AddButton("Save and Close",850/8,345)
  gui[3][8] = Controls.AddButton("Hide Held Block", 5*(850/8), 265)
  gui[3][9] = Controls.AddButton("Turn On  Pause-Save", 5*(850/8), 425)
  gui[3][10] = Controls.AddButton("Top Lock    Held Block", 5*(850/8), 345)
  cgui = 3
  hidegui()
  cgui = 0
  
  Controls.ButtonClicked = onbut
  GraphicsWindow.KeyDown = onkeydown
  GraphicsWindow.KeyUp = onkeyup
EndSub

Sub runtime
  cgui = 1
  showgui()
  
  While "True"
    If butd Then
      If lbut = gui[1][2] then
        lbut = ""
        ingame = "True"
        hidegui()
      ElseIf lbut = gui[1][3] then
        lbut = ""
        chkdel = File.DeleteFile(worldp)
        Sound.PlayChime()
        If chkdel = "SUCCESS" then
          GraphicsWindow.ShowMessage("Deleted World!",apptit)
          keydata = ""
        Else
          GraphicsWindow.ShowMessage("Delete World Failed!", apptit)
          keydata = ""
        EndIf
      ElseIf lbut = gui[1][4] then
        lbut = ""
        Sound.PlayChime()
        GraphicsWindow.ShowMessage("About The Block Game - By Captain ALM", apptit)
        keydata = ""
      ElseIf lbut = gui[1][5] then
        lbut = ""
        Program.End()
      EndIf
      butd = "False"
    EndIf
    If ingame Then
      cgui = 2
      Shapes.SetText(sptxt,"Loading Game...")
      Shapes.ShowShape(sptxt)
      world = File.ReadContents(worldp)
      cpos = ""
      map = ""
      keydata = ""
      If world = "" then
        cpos["x"] = 1
        cpos["y"] = 1
        lpos = cpos
        world["pos"] = cpos
        generate()
        world["map"] = map
        world["heldshown"] = "True"
        heldshown = world["heldshown"]
        world["autosave"] = "False"
        autosave = world["autosave"]
        world["heldlock"] = 0
        heldlm = world["heldlock"]
        heldblock = ""
      Else
        cpos = world["pos"]
        map = world["map"]
        heldshown = world["heldshown"]
        autosave = world["autosave"]
        heldblock = world["held"]
        heldlm = world["heldlock"]
      EndIf
      Shapes.HideShape(sptxt)
      showgui()
      updaterenderheld()
      renderall()
      While ingame
        gametick()
        Program.Delay(80)
      EndWhile
      pausenow = "False"
      skipnow = "False"
      hidegui()
      If saveworld then
        saveworld = "False"
        Shapes.SetText(sptxt,"Saving Game...")
        Shapes.ShowShape(sptxt)
        world["pos"] = cpos
        world["map"] = map
        world["heldshown"] = heldshown
        world["autosave"] = autosave
        world["heldlock"] = heldlm
        world["held"] = heldblock
        File.WriteContents(worldp,world)
        Shapes.HideShape(sptxt)
      EndIf
      If toend then
        Program.End()
      EndIf
      keydata = ""
      world = ""
      cpos = ""
      map = ""
      cgui = 1
      showgui()
    EndIf
    Program.Delay(40)
  EndWhile
EndSub

Sub initgame
  files = File.GetFiles(dir)
  For i_filelod = 1 To Array.GetItemCount(files)
    cfile = files[i_filelod]
    If Text.EndsWith(cfile,".b") Or Text.EndsWith(cfile,".block") Or Text.EndsWith(cfile,".blocks") Then
      blockfile = File.ReadContents(cfile)
      blockfileindx = Array.GetAllIndices(blockfile)
      For j_filelod = 1 To Array.GetItemCount(blockfileindx)
        blocktypes[blockfileindx[j_filelod]] = blockfile[blockfileindx[j_filelod]]
      EndFor
    ElseIf Text.EndsWith(cfile,".g") Or Text.EndsWith(cfile,".gen") Or Text.EndsWith(cfile,".gens") Or Text.EndsWith(cfile,".generator") Or Text.EndsWith(cfile,".generators") Then
      genfile = File.ReadContents(cfile)
      genfileindx = Array.GetAllIndices(genfile)
      For j_filelod = 1 To Array.GetItemCount(genfileindx)
        If layergen = "" then
          layergen[1] = genfile[genfileindx[j_filelod]]
          layergen[1]["name"] = genfileindx[j_filelod]
        Else
          layergen[Array.GetItemCount(layergen) + 1] = genfile[genfileindx[j_filelod]]
          layergen[Array.GetItemCount(layergen)]["name"] = genfileindx[j_filelod]
        EndIf
      EndFor
    elseif Text.EndsWith(cfile,".p") Or Text.EndsWith(cfile,".player") then
      plyfile = File.ReadContents(cfile)
      playerrenderdata = plyfile
    EndIf
  EndFor
EndSub

Sub generate
  'Layer generator array: name,(generator name) block,(block name) start,(start layer (1-30)) end,(end layer) weight,(randomiser, set to 0 to make the whole layer the block) order,(order of generation) altblock,(block used when weight does not generate the block) , min (min count of blocks generated) , max (max count of blocks generated)
  'Order using generator order values
  layergenerator = ""
  clayer = ""
  clayertmp = ""
  For i_gen_1_i = 1 To Array.GetItemCount(layergen)
    clayer = layergen[i_gen_1_i]
    clayertmp = layergenerator[clayer["order"]]
    If clayertmp = "" Then
      clayertmp[1] = clayer
    Else
      clayertmp[Array.GetItemCount(clayertmp) + 1] = clayer
    EndIf
    layergenerator[clayer["order"]] = clayertmp
  EndFor
  'generate layers
  layergenerator_indx = Array.GetAllIndices(layergenerator)
  clayer = ""
  clayertmp = ""
  clayerorderset = ""
  For i_gen_1_i = 1 To Array.GetItemCount(layergenerator_indx)
    clayerorderset = layergenerator[layergenerator_indx[i_gen_1_i]]
    For i_gen_1_j = 1 To Array.GetItemCount(clayerorderset)
      clayer = clayerorderset[i_gen_1_j]
      For i_gen = clayer["start"] To clayer["end"]
        If i_gen > 30 Then
          Goto endgenloop
        Else
          If clayer["weight"] > 0 then
            'Used if weight > 0
            If clayer["min"] = "" or clayer["min"] < 0 or clayer["min"] > 53 then
              clayer["min"] = 0
            EndIf
            If clayer["max"] = "" or clayer["max"] < 1 or clayer["max"] > 53 then
              clayer["max"] = 53
            EndIf
            If clayer["min"] > clayer["max"] then
              clayer["min"] = clayer["max"]
            EndIf
            j_gen = clayer["min"]
            k_gen = clayer["max"]
          Else
            j_gen = 0
            k_gen = 0
          EndIf
          gendonereg = ""
          If j_gen = 0 then
            For i_gen_i  = 1 to 53 step 1
              If clayer["weight"] < 1 Or clayer["weight"] = "" then
                If blocktypes[clayer["block"]] <> "" then
                  map[i_gen_i][i_gen] = clayer["block"]
                Else
                  map[i_gen_i][i_gen] = "air"
                EndIf
                j_gen = j_gen - 1
                k_gen = k_gen -1
              Else
                If Math.GetRandomNumber(clayer["weight"]) = Math.Round(clayer["weight"]/2) And k_gen > 0 then
                  If blocktypes[clayer["block"]] <> "" then
                    map[i_gen_i][i_gen] = clayer["block"]
                  Else
                    map[i_gen_i][i_gen] = "air"
                  EndIf
                  j_gen = j_gen - 1
                  k_gen = k_gen -1
                else
                  If blocktypes[clayer["altblock"]] <> "" then
                    map[i_gen_i][i_gen] = clayer["altblock"]
                  Else
                    If map[i_gen_i][i_gen] = "" then
                      map[i_gen_i][i_gen] = "air"
                    EndIf
                  EndIf
                endif
              EndIf
            EndFor
          Else
            While j_gen > 0
              For i_gen_i  = 1 to 53 step 1
                If clayer["weight"] < 1 Or clayer["weight"] = "" then
                  If blocktypes[clayer["block"]] <> "" then
                    map[i_gen_i][i_gen] = clayer["block"]
                  Else
                    map[i_gen_i][i_gen] = "air"
                  EndIf
                  gendonereg[i_gen_i] = "True"
                  j_gen = j_gen - 1
                  k_gen = k_gen -1
                Else
                  If Math.GetRandomNumber(clayer["weight"]) = Math.Round(clayer["weight"]/2) And k_gen > 0 And gendonereg[i_gen_i] <> "True" then
                    If blocktypes[clayer["block"]] <> "" then
                      map[i_gen_i][i_gen] = clayer["block"]
                    Else
                      map[i_gen_i][i_gen] = "air"
                    EndIf
                    gendonereg[i_gen_i] = "True"
                    j_gen = j_gen - 1
                    k_gen = k_gen -1
                  else
                    If blocktypes[clayer["altblock"]] <> "" then
                      map[i_gen_i][i_gen] = clayer["altblock"]
                    Else
                      If map[i_gen_i][i_gen] = "" then
                        map[i_gen_i][i_gen] = "air"
                      EndIf
                    EndIf
                  endif
                EndIf
              EndFor
            EndWhile
          EndIf
        EndIf
      EndFor
      endgenloop:
    EndFor
  EndFor
EndSub

Sub render
  If nextrenderarr <> "" Then
    For i_odren = 1 To Array.GetItemCount(nextrenderarr)
      i_render_x = Text.GetSubText(nextrenderarr[i_odren],1,Text.GetIndexOf(nextrenderarr[i_odren],",") - 1)
      i_render_y = Text.GetSubTextToEnd(nextrenderarr[i_odren],Text.GetIndexOf(nextrenderarr[i_odren],",") + 1)
      If i_render_x = cpos["x"] And i_render_y = cpos["y"] And blocktypes[map[i_render_x][i_render_y]]["placement"] <> 2 Then
        renderreg[i_render_x][i_render_y] = playerrenderdata
      Else
        renderreg[i_render_x][i_render_y] = blocktypes[map[i_render_x][i_render_y]]["image"]
      Endif
      If Text.StartsWith(renderreg[i_render_x][i_render_y],"img:") Then
        obc = GraphicsWindow.BrushColor
        opc = GraphicsWindow.PenColor
        GraphicsWindow.BrushColor = Text.GetSubTextToEnd(renderreg[i_render_x][i_render_y],5)
        GraphicsWindow.PenColor = Text.GetSubTextToEnd(renderreg[i_render_x][i_render_y],5)
        GraphicsWindow.FillRectangle((i_render_x-1)*16,(i_render_y-1)*16,16,16)
        GraphicsWindow.BrushColor = obc
        GraphicsWindow.PenColor = opc
      Else
        GraphicsWindow.DrawResizedImage(imglstreg[renderreg[i_render_x][i_render_y]],(i_render_x-1)*16,(i_render_y-1)*16,16,16)
      EndIf
    EndFor
  EndIf
EndSub

Sub unrender
  If nextrenderarr <> "" Then
    For i_odren = 1 To Array.GetItemCount(nextrenderarr)
      i_render_x = Text.GetSubText(nextrenderarr[i_odren],1,Text.GetIndexOf(nextrenderarr[i_odren],",") - 1)
      i_render_y = Text.GetSubTextToEnd(nextrenderarr[i_odren],Text.GetIndexOf(nextrenderarr[i_odren],",") + 1)
      obc = GraphicsWindow.BrushColor
      opc = GraphicsWindow.PenColor
      GraphicsWindow.BrushColor = GraphicsWindow.BackgroundColor 
      GraphicsWindow.PenColor = GraphicsWindow.BackgroundColor
      GraphicsWindow.FillRectangle((i_render_x-1)*16,(i_render_y-1)*16,16,16)
      GraphicsWindow.BrushColor = obc
      GraphicsWindow.PenColor = opc
    EndFor
  EndIf
EndSub

Sub renderall
  For i_render_x = 1 To 53 Step 1
    For i_render_y = 1 to 53 step 1
      If i_render_x = cpos["x"] And i_render_y = cpos["y"] And blocktypes[map[i_render_x][i_render_y]]["placement"] <> 2 Then
        renderreg[i_render_x][i_render_y] = playerrenderdata
      Else
        renderreg[i_render_x][i_render_y] = blocktypes[map[i_render_x][i_render_y]]["image"]
      Endif
      If Text.StartsWith(renderreg[i_render_x][i_render_y],"img:") Then
        obc = GraphicsWindow.BrushColor
        opc = GraphicsWindow.PenColor
        GraphicsWindow.BrushColor = Text.GetSubTextToEnd(renderreg[i_render_x][i_render_y],5)
        GraphicsWindow.PenColor = Text.GetSubTextToEnd(renderreg[i_render_x][i_render_y],5)
        GraphicsWindow.FillRectangle((i_render_x-1)*16,(i_render_y-1)*16,16,16)
        GraphicsWindow.BrushColor = obc
        GraphicsWindow.PenColor = opc
      Else
        GraphicsWindow.DrawResizedImage(imglstreg[renderreg[i_render_x][i_render_y]],(i_render_x-1)*16,(i_render_y-1)*16,16,16)
      EndIf
    EndFor
  EndFor
EndSub

Sub unrenderall
  obc = GraphicsWindow.BrushColor
  opc = GraphicsWindow.PenColor
  GraphicsWindow.BrushColor = GraphicsWindow.BackgroundColor 
  GraphicsWindow.PenColor = GraphicsWindow.BackgroundColor
  GraphicsWindow.FillRectangle(0,0,GraphicsWindow.Width, GraphicsWindow.Height)
  GraphicsWindow.BrushColor = obc
  GraphicsWindow.PenColor = opc
  renderobjreg = ""
  renderreg = ""
EndSub

Sub gametick
  act()
  If pausenow Or skipnow Then
    skipnow = "False"
    Goto pgsa
  EndIf
  'if player can fall due to gravity
  If blocktypes[map[cpos["x"]][cpos["y"]]]["gravity"] = 1 And blocktypes[map[cpos["x"]][cpos["y"]]]["placement"] <> 1 And cpos["y"] < 30 and blocktypes[map[cpos["x"]][cpos["y"]+1]]["placement"] <> 1 Then
    'rerender bits needed when player falls due to gravity #1
    nextrenderarr = ""
    nextrenderarr[1] = cpos["x"] + "," + cpos["y"]
    'make player fall
    cpos["y"] = cpos["y"] + 1
    'rerender bits needed when player falls due to gravity #2
    nextrenderarr[2] = cpos["x"] + "," + cpos["y"]
    render()
    nextrenderarr = ""
  EndIf
  checkentlev()
  act()
  lpos = cpos
  If keydata["Up"] Or keydata["W"] Or keydata["Space"] Then
    If(blocktypes[map[cpos["x"]][cpos["y"]+1]]["placement"] = 1 Or cpos["y"] = 30 Or blocktypes[map[cpos["x"]][cpos["y"]]]["gravity"] = 0) And blocktypes[map[cpos["x"]][cpos["y"]-1]]["placement"] <> 1 And cpos["y"] <> 1 Then
      'rerender bits when up key pressed
      nextrenderarr = ""
      nextrenderarr[1] = cpos["x"] + "," + cpos["y"]
      'make the player jump #1
      cpos["y"] = cpos["y"] - 1
      If blocktypes[map[cpos["x"]][cpos["y"]-1]]["placement"] <> 1 And cpos["y"] > 2 And blocktypes[map[cpos["x"]][cpos["y"]]]["gravity"] <> 0 Then
        'make the player player jump #2
        cpos["y"] = cpos["y"] -1
      EndIf
      nextrenderarr[2] = cpos["x"] + "," + cpos["y"]
      render()
      nextrenderarr = ""
    EndIf
  EndIf
  checkentlev()
  act()
  lpos = cpos
  If keydata["Left"] Or keydata["A"] Then
    If blocktypes[map[cpos["x"] - 1][cpos["y"]]]["placement"] <> 1 And cpos["x"] <> 1 Then
      'make the player move left
      nextrenderarr = ""
      nextrenderarr[1] = cpos["x"] + "," + cpos["y"]
      cpos["x"] = cpos["x"] - 1
      nextrenderarr[2] = cpos["x"] + "," + cpos["y"]
      render()
      nextrenderarr = ""
    EndIf
  EndIf
  checkentlev()
  act()
  lpos = cpos
  If keydata["Right"] Or keydata["D"] Then
    If blocktypes[map[cpos["x"] + 1][cpos["y"]]]["placement"] <> 1 And cpos["x"] <> 53 Then
      'make the player move right
      nextrenderarr = ""
      nextrenderarr[1] = cpos["x"] + "," + cpos["y"]
      cpos["x"] = cpos["x"] + 1
      nextrenderarr[2] = cpos["x"] + "," + cpos["y"]
      render()
      nextrenderarr = ""
    EndIf
  EndIf
  checkentlev()
  act()
  lpos = cpos
  If keydata["Down"] Or keydata["S"] Then
    If blocktypes[map[cpos["x"]][cpos["y"] + 1]]["placement"] <> 1 And cpos["y"] <> 30 Then
      'rerender bits needed when keydown is pressed
      nextrenderarr = ""
      nextrenderarr[1] = cpos["x"] + "," + cpos["y"]
      'make the player drop #1
      cpos["y"] = cpos["y"] + 1
      nextrenderarr[2] = cpos["x"] + "," + cpos["y"]
      render()
      nextrenderarr = ""
    EndIf
  EndIf
  checkentlev()
  act()
  lpos = cpos
  blockkeyedittick()
  If heldlm = 1 Then
    If heldpos Then
      moveheld()
    EndIf
  ElseIf heldlm = 2 then
    If heldpos <> "True" Then
      moveheld()
    EndIf
  Else
    If heldpos Then
      If cpos["y"] > 15 Then
        moveheld()
      EndIf
    Else
      If cpos["y"] < 16 Then
        moveheld()
      EndIf
    EndIf
  EndIf
  pgsa:
  If gwlkey = "Escape" Or pausenow Then
    pausenow = "False"
    unrenderall()
    gwlkey = ""
    hidegui()
    If autosave Then
      Shapes.SetText(sptxt,"Saving Game...")
      Shapes.ShowShape(sptxt)
      world["pos"] = cpos
      world["map"] = map
      world["heldshown"] = heldshown
      world["autosave"] = autosave
      world["heldlock"] = heldlm
      world["held"] = heldblock
      File.WriteContents(worldp,world)
      Shapes.HideShape(sptxt)
    EndIf
    cgui = 3
    If heldshown Then
      Controls.SetButtonCaption(gui[3][8],"Hide Held Block")
    Else
      Controls.SetButtonCaption(gui[3][8],"Show Held Block")
    EndIf
    If autosave Then
      Controls.SetButtonCaption(gui[3][9],"Turn Off Pause-Save")
    Else
      Controls.SetButtonCaption(gui[3][9],"Turn On  Pause-Save")
    EndIf
    If heldlm = 1 Then
      Controls.SetButtonCaption(gui[3][10],"Bottom Lock Held Block")
    ElseIf heldlm = 2 then
      Controls.SetButtonCaption(gui[3][10],"Auto Pos    Held Block")
    Else
      Controls.SetButtonCaption(gui[3][10],"Top Lock    Held Block")
    EndIf
    showgui()
    While cgui = 3
      If lbut = gui[3][3] Then
        lbut = ""
        hidegui()
        cgui = 1
        ingame = "False"
      ElseIf lbut = gui[3][4] then
        lbut = ""
        hidegui()
        cgui = 1
        ingame = "False"
        saveworld = "True"
      ElseIf lbut = gui[3][7] then
        lbut = ""
        hidegui()
        cgui = 1
        ingame = "False"
        saveworld = "True"
        toend = "True"
      ElseIf lbut = gui[3][5] then
        lbut = ""
        hidegui()
        cgui = 1
        ingame = "False"
        toend = "True"
      ElseIf lbut = gui[3][6] then
        lbut = ""
        hidegui()
        cgui = 2
        showgui()
        renderall()
      ElseIf lbut = gui[3][8] then
        lbut = ""
        If heldshown Then
          heldshown = "False"
          Controls.SetButtonCaption(gui[3][8],"Show Held Block")
        Else
          heldshown = "True"
          Controls.SetButtonCaption(gui[3][8],"Hide Held Block")
        EndIf
      ElseIf lbut = gui[3][9] then
        lbut = ""
        If autosave Then
          autosave = "False"
          Controls.SetButtonCaption(gui[3][9],"Turn On  Pause-Save")
        Else
          autosave = "True"
          Controls.SetButtonCaption(gui[3][9],"Turn Off Pause-Save")
        EndIf
      ElseIf lbut = gui[3][10] then
        lbut = ""
        If heldlm = 1 Then
          heldlm = 2
          Controls.SetButtonCaption(gui[3][10],"Auto Pos    Held Block")
        ElseIf heldlm = 2 then
          heldlm = 0
          Controls.SetButtonCaption(gui[3][10],"Top Lock    Held Block")
        Else
          heldlm = 1
          Controls.SetButtonCaption(gui[3][10],"Bottom Lock Held Block")
        EndIf
      elseIf gwlkey = "Escape" Then
        gwlkey = ""
        hidegui()
        cgui = 2
        showgui()
        renderall()
      EndIf
      Program.Delay(40)
    EndWhile
  EndIf
  act()
EndSub

Sub checkentlev
  If lpos <> cpos Then
    'call block leave and enter actions 
    If blocktypes[map[lpos["x"]][lpos["y"]]]["action"]["leave"] <> "" Then
      Stack.PushValue("actions_i", blocktypes[map[lpos["x"]][lpos["y"]]]["action"]["leave"])
    EndIf
    If blocktypes[map[cpos["x"]][cpos["y"]]]["action"]["enter"] <> "" Then
      Stack.PushValue("actions_i", blocktypes[map[cpos["x"]][cpos["y"]]]["action"]["enter"])
    EndIf
  EndIf
EndSub

Sub hidegui
  For i = 1 To Array.GetItemCount(gui[cgui])
    If cgui <> 2 Then
      If gui[cgui][i] <> "" Then
        Shapes.HideShape(gui[cgui][i])
      EndIf
    Else
      If heldshown then
        If gui[cgui][i] <> "" Then
          Shapes.HideShape(gui[cgui][i])
        EndIf
      EndIf
    EndIf
  EndFor
EndSub

Sub showgui
  For i = 1 To Array.GetItemCount(gui[cgui])
    If cgui <> 2 Then
      If gui[cgui][i] <> "" Then
        Shapes.ShowShape(gui[cgui][i])
      EndIf
    Else
      If heldshown then
        If gui[cgui][i] <> "" Then
          Shapes.ShowShape(gui[cgui][i])
        EndIf
      EndIf
    EndIf
  EndFor
EndSub

Sub onbut
  butd = "True"
  lbut = Controls.LastClickedButton
EndSub

Sub onkeydown
  gwlkey = GraphicsWindow.LastKey
  kdlk = GraphicsWindow.LastKey
  keydata[kdlk] = "True"
EndSub

Sub onkeyup
  kulk = GraphicsWindow.LastKey
  keydata[kulk] = "False"
EndSub

Sub act
  cactions = ""
  'actions index first (number from 1), then, name,(name of action), args,(numbered array of arguments from 1)
  
  'reverse stack into queue
  While Stack.GetCount("actions_i") > 0
    Stack.PushValue("actions",Stack.PopValue("actions_i"))
  EndWhile
  'execute actions
  While Stack.GetCount("actions") > 0
    cactions = Stack.PopValue("actions")
    For act_i = 1 To Array.GetItemCount(cactions)
      cactnom = ""
      cactargs = ""
      cactnom = Text.ConvertToLowerCase(cactions[act_i]["name"])
      cactargs = cactions[act_i]["args"]
      If cactnom = "position" Then
        nextrenderarr = ""
        If cactargs[1] <> "" and cactargs[2] <> "" and cactargs[1] > 0 and cactargs[1] < 54 and cactargs[2] > 0 and cactargs[2] < 31 then
          nextrenderarr[1] = cpos["x"] + "," + cpos["y"]
          cpos["x"] = cactargs[1]
          cpos["y"] = cactargs[2]
          nextrenderarr[2] = cpos["x"] + "," + cpos["y"]
          lpos = cpos
          render()
        EndIf
        nextrenderarr = ""
      ElseIf cactnom = "output" then
        GraphicsWindow.ShowMessage(cactargs[1], apptit)
        keydata = ""
      elseif cactnom = "generate" then
        unrenderall()
        hidegui()
        Shapes.SetText(sptxt,"Regenerating...")
        Shapes.ShowShape(sptxt)
        world["pos"] = cpos
        generate()
        world["map"] = map
        Shapes.HideShape(sptxt)
        showgui()
        renderall()
      elseif cactnom = "save" then
        unrenderall()
        hidegui()
        Shapes.SetText(sptxt,"Saving Game...")
        Shapes.ShowShape(sptxt)
        world["pos"] = cpos
        world["map"] = map
        world["heldshown"] = heldshown
        world["autosave"] = autosave
        world["heldlock"] = heldlm
        world["held"] = heldblock
        File.WriteContents(worldp,world)
        Shapes.HideShape(sptxt)
        showgui()
        renderall()
      elseif cactnom = "pause" then
        pausenow =  "True"
      elseif cactnom = "exit" then
        Program.End()
      elseif cactnom = "menu" then
        unrenderall()
        hidegui()
        cgui = 1
        ingame = "False"
        skipnow = "True"
      elseif cactnom = "setblock" or cactnom = "set_block" or cactnom = "set block" then
        If blocktypes[cactargs[1]] <> "" then
          'map[cpos["x"]][cpos["y"]] = cactargs[1]
          newblock = cactargs[1]
          editblockpos = cpos["x"] + "," + cpos["y"]
          editblock()
        EndIf
      elseif cactnom = "setblockat" or cactnom = "set_block_at" or cactnom = "set block at" then
        If blocktypes[cactargs[1]] <> "" and cactargs[2] <> "" and cactargs[3] <> "" then
          'map[cactargs[2]][cactargs[3]] = cactargs[1]
          newblock = cactargs[1]
          editblockpos = cactargs[2] + "," + cactargs[3]
          editblock()
        EndIf
      elseif cactnom = "left" then
        nextrenderarr = ""
        If cactargs[1] = "" then
          cactargs[1] = 1
        EndIf
        nextrenderarr[1] = cpos["x"] + "," + cpos["y"]
        If cpos["x"] - cactargs[1] < 1 then
          cpos["x"] = 1
        elseif cpos["x"] - cactargs[1] > 53 then
          cpos["x"] = 53
        Else
          cpos["x"] = cpos["x"] - cactargs[1]
        EndIf
        nextrenderarr[2] = cpos["x"] + "," + cpos["y"]
        render()
        nextrenderarr = ""
      elseif cactnom = "right" then
        nextrenderarr = ""
        If cactargs[1] = "" then
          cactargs[1] = 1
        EndIf
        nextrenderarr[1] = cpos["x"] + "," + cpos["y"]
        If cpos["x"] + cactargs[1] < 1 then
          cpos["x"] = 1
        elseif cpos["x"] + cactargs[1] > 53 then
          cpos["x"] = 53
        Else
          cpos["x"] = cpos["x"] + cactargs[1]
        EndIf
        nextrenderarr[2] = cpos["x"] + "," + cpos["y"]
        render()
        nextrenderarr = ""
      elseif cactnom = "up" then
        nextrenderarr = ""
        If cactargs[1] = "" then
          cactargs[1] = 1
        EndIf
        nextrenderarr[1] = cpos["x"] + "," + cpos["y"]
        If cpos["y"] - cactargs[1] < 1 then
          cpos["y"] = 1
        elseif cpos["y"] - cactargs[1] > 30 then
          cpos["y"] = 30
        Else
          cpos["y"] = cpos["y"] - cactargs[1]
        EndIf
        nextrenderarr[2] = cpos["x"] + "," + cpos["y"]
        render()
        nextrenderarr = ""
      elseif cactnom = "down" then
        nextrenderarr = ""
        If cactargs[1] = "" then
          cactargs[1] = 1
        EndIf
        nextrenderarr[1] = cpos["x"] + "," + cpos["y"]
        If cpos["y"] + cactargs[1] < 1 then
          cpos["y"] = 1
        elseif cpos["y"] + cactargs[1] > 30 then
          cpos["y"] = 30
        Else
          cpos["y"] = cpos["y"] + cactargs[1]
        EndIf
        nextrenderarr[2] = cpos["x"] + "," + cpos["y"]
        render()
        nextrenderarr = ""
      elseif cactnom = "setheldblock" or cactnom = "set held block" or cactnom = "set_held_block" then
        If blocktypes[cactargs[1]] <> "" then
          heldblock = cactargs[1]
        elseif cactargs[1] = "" then
          heldblock = ""
        EndIf
        updaterenderheld()
      elseif cactnom = "mineat" or cactnom = "mine at" or cactnom = "mine_at" then
        If cactargs[1] = "" or cactargs[1] < 0 or cactargs[1] > 53 then
          testcon1 = "True"
        Else
          testcon1 = "False"
        EndIf
        If cactargs[2] = "" or cactargs[2] < 0 or cactargs[2] > 30 then
          testcon2 = "True"
        Else
          testcon2 = "False"
        EndIf
        If testcon1 <> "True" and testcon2 <> "True" then
          If cactargs[3] <> "True" then
            useheld = "True"
          Else
            useheld = "False"
          EndIf
          mineblockpos = cactargs[1] + "," + cactargs[2]
          mineblock()
        EndIf
      elseif cactnom = "placeat" or cactnom = "place at" or cactnom = "place_at" then
        If cactargs[1] = "" or cactargs[1] < 0 or cactargs[1] > 53 then
          testcon1 = "True"
        Else
          testcon1 = "False"
        EndIf
        If cactargs[2] = "" or cactargs[2] < 0 or cactargs[2] > 30 then
          testcon2 = "True"
        Else
          testcon2 = "False"
        EndIf
        If testcon1 <> "True" and testcon2 <> "True" then
          If cactargs[3] = "" or blocktypes[cactargs[3]] = "" then
            useheld = "True"
          Else
            useheld = "False"
            newblock = cactargs[3]
          EndIf
          placeblockpos = cactargs[1] + "," + cactargs[2]
          placeblock()
        EndIf
      elseif cactnom = "mine" or cactnom = "place" then
        tmpblockpos = ""
        If cactargs[2] = "" or blocktypes[cactargs[2]] = "" or cactargs[2] <> "True" then
          useheld = "True"
        Else
          useheld = "False"
          If cactnom = "place" then
            newblock = cactargs[2]
          EndIf
        EndIf
        If cactargs[1] = 0 then
          tmpblockpos = (cpos["x"]) + "," + (cpos["y"])
        elseIf cactargs[1] = 1 then
          tmpblockpos = (cpos["x"]) + "," + (cpos["y"]-1)
        elseIf cactargs[1] = 2 then
          tmpblockpos = (cpos["x"]+1) + "," + (cpos["y"]-1)
        elseIf cactargs[1] = 3 then
          tmpblockpos = (cpos["x"]+1) + "," + (cpos["y"])
        elseIf cactargs[1] = 4 then
          tmpblockpos = (cpos["x"]+1) + "," + (cpos["y"]+1)
        elseIf cactargs[1] = 5 then
          tmpblockpos = (cpos["x"]) + "," + (cpos["y"]+1)
        elseIf cactargs[1] = 6 then
          tmpblockpos = (cpos["x"]-1) + "," + (cpos["y"]+1)
        elseIf cactargs[1] = 7 then
          tmpblockpos = (cpos["x"]-1) + "," + (cpos["y"])
        elseIf cactargs[1] = 8 then
          tmpblockpos = (cpos["x"]-1) + "," + (cpos["y"]-1)
        EndIf
        If cactnom = "mine" then
          mineblockpos = tmpblockpos
          mineblock()
        Else
          placeblockpos = tmpblockpos
          placeblock()
        EndIf
      EndIf
    EndFor
  EndWhile
EndSub

Sub updaterenderheld
  Shapes.Remove(heldblockobj)
  If heldblock <> "" And blocktypes[heldblock] <> "" Then
    If Text.StartsWith(blocktypes[heldblock]["image"],"img:") Then
      obc = GraphicsWindow.BrushColor
      opc = GraphicsWindow.PenColor
      GraphicsWindow.BrushColor = Text.GetSubTextToEnd(blocktypes[heldblock]["image"],5)
      GraphicsWindow.PenColor = Text.GetSubTextToEnd(blocktypes[heldblock]["image"],5)
      gui[2][2] = Shapes.AddRectangle(64,64)
      Shapes.Move(gui[2][2], Shapes.GetLeft(gui[2][1]) + 32, Shapes.GetTop(gui[2][1]) + 32)
      GraphicsWindow.BrushColor = obc
      GraphicsWindow.PenColor = opc
    Else
      gui[2][2] = Shapes.AddImage(imglstreg[blocktypes[heldblock]["image"]])
      If ImageList.GetHeightOfImage(imglstreg[blocktypes[heldblock]["image"]]) <> 64 Or ImageList.GetWidthOfImage(imglstreg[blocktypes[heldblock]["image"]]) <> 64 Then
        Controls.SetSize(gui[2][2],64,64)
      EndIf
      Shapes.Move(gui[2][2], Shapes.GetLeft(gui[2][1]) + 32, Shapes.GetTop(gui[2][1]) + 32)
    EndIf
    Shapes.SetOpacity(gui[2][2], 75)
    heldblockobj = gui[2][2]
  Else
    gui[2][2] = ""
    heldbackobj = ""
    heldblock = ""
  EndIf
  If heldshown <> "True" Then
    Shapes.HideShape(gui[2][1])
    Shapes.HideShape(gui[2][2])
  Else
    Shapes.ShowShape(gui[2][1])
    Shapes.ShowShape(gui[2][2])
  EndIf
EndSub

Sub moveheld
  If heldpos Then
    Shapes.Move(gui[2][1],(850/2) - 64, 64)
    heldpos = "False"
  Else
    Shapes.Move(gui[2][1],(850/2) - 64, GraphicsWindow.Height - (128 + 64))
    heldpos = "True"
  EndIf
  If heldblock <> "" Then
    Shapes.Move(gui[2][2], Shapes.GetLeft(gui[2][1]) + 32, Shapes.GetTop(gui[2][1]) + 32)
  EndIf
EndSub

Sub editblock
  blockedit_x = Text.GetSubText(editblockpos,1,Text.GetIndexOf(editblockpos,",") - 1)
  blockedit_y = Text.GetSubTextToEnd(editblockpos,Text.GetIndexOf(editblockpos,",") + 1)
  If blocktypes[newblock] <> "" Then
    map[blockedit_x][blockedit_y] = newblock
  EndIf
  nextrenderarr = ""
  nextrenderarr[1] = editblockpos
  render()
  nextrenderarr = ""
  editblockpos = ""
  newblock = ""
EndSub

Sub mineblock
  blockmine_x = Text.GetSubText(mineblockpos,1,Text.GetIndexOf(mineblockpos,",") - 1)
  blockmine_y = Text.GetSubTextToEnd(mineblockpos,Text.GetIndexOf(mineblockpos,",") + 1)
  If blocktypes[map[blockmine_x][blockmine_y]]["mineable"] Then
    editblockpos = blockmine_x + "," + blockmine_y
    newblock = "air"
    If useheld Then
      heldblock = map[blockmine_x][blockmine_y]
      updaterenderheld()
    EndIf
    tmpobnbm = map[blockedit_x][blockedit_y]
    editblock()
    If blocktypes[tmpobnbm]["action"]["mine"] <> "" Then
      Stack.PushValue("actions_i", blocktypes[tmpobnbm]["action"]["mine"])
    EndIf
  EndIf
  mineblockpos = ""
  useheld = ""
EndSub

Sub placeblock
  blockplace_x = Text.GetSubText(placeblockpos,1,Text.GetIndexOf(placeblockpos,",") - 1)
  blockplace_y = Text.GetSubTextToEnd(placeblockpos,Text.GetIndexOf(placeblockpos,",") + 1)
  If useheld Then
    newblock = heldblock
  EndIf
  If blocktypes[newblock]["placeable"] And blocktypes[map[blockplace_x][blockplace_y]]["placement"] = 0 And map[blockplace_x][blockplace_y] <> newblock Then
    If (blockplace_x = cpos["x"] And blockplace_y = cpos["y"] And blocktypes[newblock]["placement"] <> 1) Or (blockplace_x <> cpos["x"] Or blockplace_y <> cpos["y"]) Then
      editblockpos = blockplace_x + "," + blockplace_y
      If useheld Then
        heldblock = ""
        updaterenderheld()
      EndIf
      editblock()
      If blocktypes[map[blockplace_x][blockplace_y]]["action"]["place"] <> "" Then
        Stack.PushValue("actions_i", blocktypes[map[blockplace_x][blockplace_y]]["action"]["place"])
      EndIf
    EndIf
  EndIf
  placeblockpos = ""
  newblock = ""
  useheld = ""
EndSub

Sub blockkeyedittick
  If keydata["Y"] Or keydata["NumPad8"] Or keydata["D2"] Then
    If heldblock = "" Then
      mineblockpos = (cpos["x"]) + "," + (cpos["y"]-1)
      useheld = "True"
      mineblock()
    Else
      placeblockpos = (cpos["x"]) + "," + (cpos["y"]-1)
      useheld = "True"
      placeblock()
    EndIf
  EndIf
  If keydata["U"] Or keydata["NumPad9"] Or keydata["D3"] Then
    If heldblock = "" Then
      mineblockpos = (cpos["x"]+1) + "," + (cpos["y"]-1)
      useheld = "True"
      mineblock()
    Else
      placeblockpos = (cpos["x"]+1) + "," + (cpos["y"]-1)
      useheld = "True"
      placeblock()
    EndIf
  EndIf
  If keydata["J"] Or keydata["NumPad6"] Or keydata["D4"] Then
    If heldblock = "" Then
      mineblockpos = (cpos["x"]+1) + "," + (cpos["y"])
      useheld = "True"
      mineblock()
    Else
      placeblockpos = (cpos["x"]+1) + "," + (cpos["y"])
      useheld = "True"
      placeblock()
    EndIf
  EndIf
  If keydata["M"] Or keydata["NumPad3"] Or keydata["D5"] Then
    If heldblock = "" Then
      mineblockpos = (cpos["x"]+1) + "," + (cpos["y"]+1)
      useheld = "True"
      mineblock()
    Else
      placeblockpos = (cpos["x"]+1) + "," + (cpos["y"]+1)
      useheld = "True"
      placeblock()
    EndIf
  EndIf
  If keydata["N"] Or keydata["NumPad2"] Or keydata["D6"] Then
    If heldblock = "" Then
      mineblockpos = (cpos["x"]) + "," + (cpos["y"]+1)
      useheld = "True"
      mineblock()
    Else
      placeblockpos = (cpos["x"]) + "," + (cpos["y"]+1)
      useheld = "True"
      placeblock()
    EndIf
  EndIf
  If keydata["B"] Or keydata["NumPad1"] Or keydata["D7"] Then
    If heldblock = "" Then
      mineblockpos = (cpos["x"]-1) + "," + (cpos["y"]+1)
      useheld = "True"
      mineblock()
    Else
      placeblockpos = (cpos["x"]-1) + "," + (cpos["y"]+1)
      useheld = "True"
      placeblock()
    EndIf
  EndIf
  If keydata["G"] Or keydata["NumPad4"] Or keydata["D8"] Then
    If heldblock = "" Then
      mineblockpos = (cpos["x"]-1) + "," + (cpos["y"])
      useheld = "True"
      mineblock()
    Else
      placeblockpos = (cpos["x"]-1) + "," + (cpos["y"])
      useheld = "True"
      placeblock()
    EndIf
  EndIf
  If keydata["T"] Or keydata["NumPad7"] Or keydata["D9"] Then
    If heldblock = "" Then
      mineblockpos = (cpos["x"]-1) + "," + (cpos["y"]-1)
      useheld = "True"
      mineblock()
    Else
      placeblockpos = (cpos["x"]-1) + "," + (cpos["y"]-1)
      useheld = "True"
      placeblock()
    EndIf
  EndIf
  If keydata["H"] Or keydata["NumPad5"] Or keydata["D1"] Then
    If heldblock = "" Then
      mineblockpos = (cpos["x"]) + "," + (cpos["y"])
      useheld = "True"
      mineblock()
    Else
      placeblockpos = (cpos["x"]) + "," + (cpos["y"])
      useheld = "True"
      placeblock()
    EndIf
  EndIf
EndSub